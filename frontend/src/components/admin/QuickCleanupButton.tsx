import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from '@/components/ui/alert-dialog';
import { Trash2, Loader2 } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { cleanupAPI } from '@/api/cleanup';

const QuickCleanupButton: React.FC = () => {
  const [isLoading, setIsLoading] = useState(false);
  const { toast } = useToast();

  const handleCleanup = async () => {
    setIsLoading(true);
    try {
      const response = await cleanupAPI.cleanupTVInterfaces();
      if (response.success) {
        toast({
          title: "üéâ –£—Å–ø–µ—Ö!",
          description: `–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–æ–∑–¥–∞–Ω–æ ${response.data?.created || 0} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏`,
        });
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          window.location.reload();
        }, 2000);
      } else {
        toast({
          title: "‚ùå –û—à–∏–±–∫–∞",
          description: response.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—á–∏—Å—Ç–∫—É TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤",
          variant: "destructive",
        });
      }
    } catch (error) {
      console.error('Error cleaning up TV interfaces:', error);
      toast({
        title: "‚ùå –û—à–∏–±–∫–∞",
        description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <AlertDialog>
      <AlertDialogTrigger asChild>
        <Button 
          variant="destructive" 
          disabled={isLoading}
          className="w-full"
        >
          {isLoading ? (
            <>
              <Loader2 className="h-4 w-4 mr-2 animate-spin" />
              –û—á–∏—Å—Ç–∫–∞...
            </>
          ) : (
            <>
              <Trash2 className="h-4 w-4 mr-2" />
              üßπ –†–ï–®–ò–¢–¨ –ü–†–û–ë–õ–ï–ú–£: –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
            </>
          )}
        </Button>
      </AlertDialogTrigger>
      <AlertDialogContent>
        <AlertDialogHeader>
          <AlertDialogTitle>üéØ –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã?</AlertDialogTitle>
          <AlertDialogDescription className="space-y-2">
            <p>
              <strong>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:</strong>
            </p>
            <ul className="list-disc list-inside space-y-1 text-sm">
              <li>‚ùå –£–¥–∞–ª–∏—Ç –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã ("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é OpenBox", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ UCLAN")</li>
              <li>‚úÖ –°–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏</li>
              <li>‚úÖ –ò—Å–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ–±–ª–µ–º—É "–ù–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞" –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –æ–±–ª–∞—Å—Ç–µ–π</li>
              <li>‚úÖ –î–æÔøΩÔøΩ–∞–≤–∏—Ç –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</li>
            </ul>
            <p className="font-medium text-green-600">
              –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä –æ–±–ª–∞—Å—Ç–µ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞—Ç—å!
            </p>
          </AlertDialogDescription>
        </AlertDialogHeader>
        <AlertDialogFooter>
          <AlertDialogCancel>–û—Ç–º–µ–Ω–∞</AlertDialogCancel>
          <AlertDialogAction onClick={handleCleanup}>
            üöÄ –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
          </AlertDialogAction>
        </AlertDialogFooter>
      </AlertDialogContent>
    </AlertDialog>
  );
};

export default QuickCleanupButton;

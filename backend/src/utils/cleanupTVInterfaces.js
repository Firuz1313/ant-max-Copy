import { query, transaction } from "./database.js";
import { v4 as uuidv4 } from "uuid";

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ªÔøΩÔøΩ—Å–∫–∏—Ö
export const cleanupAndCreateUserTVInterfaces = async () => {
  try {
    console.log("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤...");

    await transaction(async (client) => {
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã (—Ç–µ—Å—Ç–æ–≤—ã–µ)
      console.log("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤...");
      await client.query("DELETE FROM tv_interfaces");

      // –ü–æ–ª—É—á–∞–µ–º ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
      const devicesResult = await client.query(
        "SELECT id, name, brand, model FROM devices ORDER BY name",
      );
      const devices = devicesResult.rows;

      if (devices.length === 0) {
        throw new Error("–ù–µ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤");
      }

      console.log(
        `üì± –ù–∞–π–¥–µ–Ω–æ ${devices.length} —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤`,
      );

      // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
      const createDeviceScreenshot = (deviceName, deviceBrand) => {
        const canvas = {
          width: 800,
          height: 600,
        };

        // ÔøΩÔøΩ–µ–Ω–µ—Ä–∏—Ä—É–µ–º SVG –≤–º–µ—Å—Ç–æ canvas –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        const svg = `
          <svg width="${canvas.width}" height="${canvas.height}" xmlns="http://www.w3.org/2000/svg">
            <defs>
              <linearGradient id="bg" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" style="stop-color:#1a1a1a;stop-opacity:1" />
                <stop offset="100%" style="stop-color:#2d2d2d;stop-opacity:1" />
              </linearGradient>
            </defs>
            
            <!-- Background -->
            <rect width="100%" height="100%" fill="url(#bg)"/>
            
            <!-- Header -->
            <rect x="0" y="0" width="100%" height="80" fill="#333"/>
            <text x="50" y="35" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#fff">${deviceBrand}</text>
            <text x="50" y="60" font-family="Arial, sans-serif" font-size="14" fill="#ccc">${deviceName}</text>
            
            <!-- Time -->
            <text x="720" y="35" font-family="Arial, sans-serif" font-size="18" fill="#fff" text-anchor="end">${new Date().toLocaleTimeString("ru-RU", { hour: "2-digit", minute: "2-digit" })}</text>
            
            <!-- Menu Items -->
            <g>
              <!-- Channels -->
              <rect x="100" y="150" width="150" height="120" fill="#3b82f6" stroke="#fff" stroke-width="2"/>
              <text x="175" y="200" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#fff" text-anchor="middle">–ö–∞–Ω–∞–ª—ã</text>
              <text x="175" y="220" font-family="Arial, sans-serif" font-size="12" fill="#fff" text-anchor="middle">TV Guide</text>
              
              <!-- Settings -->
              <rect x="300" y="150" width="150" height="120" fill="#10b981" stroke="#fff" stroke-width="2"/>
              <text x="375" y="200" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#fff" text-anchor="middle">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</text>
              <text x="375" y="220" font-family="Arial, sans-serif" font-size="12" fill="#fff" text-anchor="middle">Settings</text>
              
              <!-- Apps -->
              <rect x="500" y="150" width="150" height="120" fill="#f59e0b" stroke="#fff" stroke-width="2"/>
              <text x="575" y="200" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#fff" text-anchor="middle">–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è</text>
              <text x="575" y="220" font-family="Arial, sans-serif" font-size="12" fill="#fff" text-anchor="middle">Apps</text>
              
              <!-- Movies -->
              <rect x="100" y="320" width="150" height="120" fill="#ef4444" stroke="#fff" stroke-width="2"/>
              <text x="175" y="370" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#fff" text-anchor="middle">–§–∏–ª—å–º—ã</text>
              <text x="175" y="390" font-family="Arial, sans-serif" font-size="12" fill="#fff" text-anchor="middle">Movies</text>
              
              <!-- Music -->
              <rect x="300" y="320" width="150" height="120" fill="#8b5cf6" stroke="#fff" stroke-width="2"/>
              <text x="375" y="370" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#fff" text-anchor="middle">–ú—É–∑—ã–∫–∞</text>
              <text x="375" y="390" font-family="Arial, sans-serif" font-size="12" fill="#fff" text-anchor="middle">Music</text>
              
              <!-- Games -->
              <rect x="500" y="320" width="150" height="120" fill="#06b6d4" stroke="#fff" stroke-width="2"/>
              <text x="575" y="370" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#fff" text-anchor="middle">–ò–≥—Ä—ã</text>
              <text x="575" y="390" font-family="Arial, sans-serif" font-size="12" fill="#fff" text-anchor="middle">Games</text>
            </g>
            
            <!-- Footer -->
            <rect x="0" y="520" width="100%" height="80" fill="#222"/>
            <text x="50" y="550" font-family="Arial, sans-serif" font-size="12" fill="#999">–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</text>
            <text x="50" y="570" font-family="Arial, sans-serif" font-size="10" fill="#666">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</text>
          </svg>
        `;

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º SVG –≤ base64 data URL
        return `data:image/svg+xml;base64,${Buffer.from(svg).toString("base64")}`;
      };

      // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
      let createdCount = 0;
      for (const device of devices) {
        console.log(`üì∫ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è ${device.name}...`);

        const screenshotData = createDeviceScreenshot(
          device.name,
          device.brand,
        );

        const tvInterfaceData = {
          id: uuidv4(),
          name: `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ${device.name}`,
          description: `–û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è ${device.brand} ${device.model}`,
          type: "home",
          device_id: device.id,
          screenshot_url: null,
          screenshot_data: screenshotData,
          clickable_areas: JSON.stringify([
            {
              id: "channels",
              x: 100,
              y: 150,
              width: 150,
              height: 120,
              label: "–ö–∞–Ω–∞–ª—ã",
              action: "open_channels",
              color: "#3b82f6",
              shape: "rectangle",
            },
            {
              id: "settings",
              x: 300,
              y: 150,
              width: 150,
              height: 120,
              label: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
              action: "open_settings",
              color: "#10b981",
              shape: "rectangle",
            },
            {
              id: "apps",
              x: 500,
              y: 150,
              width: 150,
              height: 120,
              label: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
              action: "open_apps",
              color: "#f59e0b",
              shape: "rectangle",
            },
          ]),
          highlight_areas: JSON.stringify([]),
          is_active: true,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString(),
        };

        const columns = Object.keys(tvInterfaceData);
        const values = Object.values(tvInterfaceData);
        const placeholders = columns.map((_, index) => `$${index + 1}`);

        await client.query(
          `INSERT INTO tv_interfaces (${columns.join(", ")}) VALUES (${placeholders.join(", ")})`,
          values,
        );

        createdCount++;
      }

      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdCount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤`);
    });

    console.log("üéâ –û—á–∏—Å—Ç–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
    return {
      success: true,
      created: devices.length,
    };
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ TV –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:", error);
    throw error;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if (import.meta.url === `file://${process.argv[1]}`) {
  cleanupAndCreateUserTVInterfaces()
    .then((result) => {
      console.log("üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!", result);
      process.exit(0);
    })
    .catch((error) => {
      console.error("üí• –û—à–∏–±–∫–∞:", error);
      process.exit(1);
    });
}

export default cleanupAndCreateUserTVInterfaces;

import { query, transaction } from "./database.js";

const generateId = () => {
  return Date.now().toString(36) + Math.random().toString(36).substr(2);
};

const createTimestamp = () => {
  return new Date().toISOString();
};

// NO SEED DATA - Database should start completely empty
const testDevices = [];
const testProblems = [];
const testSteps = [];

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export const seedDatabase = async () => {
  try {
    console.log("üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...");

    // Skip seeding - keep database empty for production use
    console.log("‚úÖ Database seeding skipped - database will remain empty");
    
    return {
      success: true,
      message: "Database seeding skipped - no test data added",
      data: {
        devices: 0,
        problems: 0,
        steps: 0,
        sessions: 0,
      },
    };
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error);
    throw error;
  }
};

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export const clearDatabase = async () => {
  try {
    console.log("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");

    await transaction(async (client) => {
      // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
      await client.query("SET FOREIGN_KEY_CHECKS = 0");

      // –û—á–∏—â–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
      await client.query("DELETE FROM session_steps");
      await client.query("DELETE FROM step_actions");
      await client.query("DELETE FROM diagnostic_sessions");
      await client.query("DELETE FROM diagnostic_steps");
      await client.query("DELETE FROM tv_interface_marks");
      await client.query("DELETE FROM tv_interfaces");
      await client.query("DELETE FROM remotes");
      await client.query("DELETE FROM problems");
      await client.query("DELETE FROM devices");
      await client.query("DELETE FROM change_logs");
      await client.query("DELETE FROM users WHERE id != 'admin-001'"); // –û—Å—Ç–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞
      await client.query("DELETE FROM site_settings WHERE id != 'settings'"); // –û—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

      // –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
      await client.query("SET FOREIGN_KEY_CHECKS = 1");

      console.log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–ΩÔøΩÔøΩ –æ—á–∏—â–µ–Ω–∞");
    });

    return {
      success: true,
      message: "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞",
    };
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error);
    throw error;
  }
};

export default {
  seedDatabase,
  clearDatabase,
};

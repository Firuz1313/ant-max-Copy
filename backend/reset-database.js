import fs from 'fs';
import path from 'path';
import db from './src/utils/database.js';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function resetDatabase() {
  try {
    console.log('üîÑ –°–±—Ä–æ—Å –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // Read migration files
    const resetMigration = fs.readFileSync(
      path.join(__dirname, 'migrations', '012_reset_and_create_full_database.sql'),
      'utf8'
    );
    
    const seedMigration = fs.readFileSync(
      path.join(__dirname, 'migrations', '013_seed_full_database.sql'),
      'utf8'
    );
    
    console.log('üìä –í—ã–ø–æ–ª–Ω—è–µ–º —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    await db.query(resetMigration);
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞');
    
    console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
    await db.query(seedMigration);
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    
    // Get statistics
    const stats = await Promise.all([
      db.query('SELECT COUNT(*) as count FROM users'),
      db.query('SELECT COUNT(*) as count FROM devices'),
      db.query('SELECT COUNT(*) as count FROM problems'),
      db.query('SELECT COUNT(*) as count FROM diagnostic_steps'),
      db.query('SELECT COUNT(*) as count FROM remotes'),
      db.query('SELECT COUNT(*) as count FROM tv_interfaces'),
      db.query('SELECT COUNT(*) as count FROM tv_interface_marks'),
      db.query('SELECT COUNT(*) as count FROM remote_marks'),
    ]);
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${stats[0].rows[0].count}`);
    console.log(`üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ${stats[1].rows[0].count}`);
    console.log(`‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã: ${stats[2].rows[0].count}`);
    console.log(`üîß –®–∞–≥–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${stats[3].rows[0].count}`);
    console.log(`üéõ –ü—É–ª—å—Ç—ã: ${stats[4].rows[0].count}`);
    console.log(`üì∫ TV –ò–Ω—Ç–µ—Ä—ÑÔøΩÔøΩ–π—Å—ã: ${stats[5].rows[0].count}`);
    console.log(`üéØ –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤: ${stats[6].rows[0].count}`);
    console.log(`üéØ –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∏ –ø—É–ª—å—Ç–æ–≤: ${stats[7].rows[0].count}`);
    
    console.log('\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    throw error;
  } finally {
    await db.closePool();
  }
}

resetDatabase().catch(console.error);
